apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "streamworks.fullname" . }}-backend
  namespace: {{ .Values.app.namespace }}
  labels:
    {{- include "streamworks.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "streamworks.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/backend-configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/backend-secret.yaml") . | sha256sum }}
      labels:
        {{- include "streamworks.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "streamworks.serviceAccountName" . }}
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
        runAsNonRoot: true
      containers:
      - name: backend
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.backend.service.targetPort }}
          protocol: TCP
        env:
        {{- range .Values.backend.env }}
        - name: {{ .name }}
          value: {{ .value | quote }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ include "streamworks.fullname" . }}-backend-config
        - secretRef:
            name: {{ include "streamworks.fullname" . }}-backend-secret
        {{- if .Values.backend.health.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.backend.health.path }}
            port: http
          initialDelaySeconds: {{ .Values.backend.health.initialDelaySeconds }}
          periodSeconds: {{ .Values.backend.health.periodSeconds }}
          timeoutSeconds: {{ .Values.backend.health.timeoutSeconds }}
          failureThreshold: {{ .Values.backend.health.failureThreshold }}
        readinessProbe:
          httpGet:
            path: {{ .Values.backend.health.path }}
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        {{- end }}
        resources:
          {{- toYaml .Values.backend.resources | nindent 12 }}
        volumeMounts:
        - name: storage
          mountPath: /app/storage
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: storage
        persistentVolumeClaim:
          claimName: {{ include "streamworks.fullname" . }}-storage
      - name: logs
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "streamworks.fullname" . }}-backend
  namespace: {{ .Values.app.namespace }}
  labels:
    {{- include "streamworks.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  type: {{ .Values.backend.service.type }}
  ports:
    - port: {{ .Values.backend.service.port }}
      targetPort: {{ .Values.backend.service.targetPort }}
      protocol: TCP
      name: http
  selector:
    {{- include "streamworks.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: backend