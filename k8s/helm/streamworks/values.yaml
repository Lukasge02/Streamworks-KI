# Enterprise Helm Values for StreamWorks RAG Application

# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Application configuration
app:
  name: streamworks
  version: "1.0.0"
  namespace: streamworks-prod

# Backend service configuration  
backend:
  enabled: true
  replicaCount: 3
  image:
    repository: streamworks/backend
    tag: "latest"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 500m
      memory: 1Gi
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 70
    targetMemoryUtilizationPercentage: 80
  env:
    - name: ENVIRONMENT
      value: "production"
    - name: LOG_LEVEL
      value: "INFO"
    - name: MAX_WORKERS
      value: "4"
  configMap:
    data:
      CORS_ORIGINS: "https://streamworks.arvato-systems.com"
      RATE_LIMIT_RPM: "300"
  secrets:
    data:
      OPENAI_API_KEY: ""
      DATABASE_URL: ""
  health:
    enabled: true
    path: "/api/system/health"
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3

# Frontend service configuration
frontend:
  enabled: true
  replicaCount: 2
  image:
    repository: streamworks/frontend
    tag: "latest"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  autoscaling:
    enabled: true
    minReplicas: 2
    maxReplicas: 5
    targetCPUUtilizationPercentage: 70
  env:
    - name: REACT_APP_ENVIRONMENT
      value: "production"
  configMap:
    data:
      REACT_APP_API_URL: "https://api.streamworks.arvato-systems.com"
  health:
    enabled: true
    path: "/health"
    initialDelaySeconds: 10
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3

# Database configuration
postgresql:
  enabled: true
  auth:
    username: rag
    database: ragdb
    existingSecret: streamworks-postgres-secret
  primary:
    persistence:
      enabled: true
      size: 50Gi
      storageClass: "fast-ssd"
    resources:
      limits:
        cpu: 1000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
    configuration: |
      max_connections = 200
      shared_buffers = 512MB
      effective_cache_size = 1GB
      maintenance_work_mem = 64MB
      checkpoint_completion_target = 0.9
      wal_buffers = 16MB
      default_statistics_target = 100
      random_page_cost = 1.1
      effective_io_concurrency = 200

# Redis configuration
redis:
  enabled: true
  auth:
    enabled: false
  master:
    persistence:
      enabled: true
      size: 8Gi
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 128Mi

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "300"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "75"
  hosts:
    - host: streamworks.arvato-systems.com
      paths:
        - path: /
          pathType: Prefix
          service: frontend
        - path: /api
          pathType: Prefix
          service: backend
  tls:
    - secretName: streamworks-tls
      hosts:
        - streamworks.arvato-systems.com

# Monitoring configuration
monitoring:
  enabled: true
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: 30s
      path: /metrics
  grafana:
    enabled: true
    adminPassword: ""
    persistence:
      enabled: true
      size: 10Gi
    dashboards:
      enabled: true
      configMapName: streamworks-dashboards

# Security configuration
security:
  podSecurityPolicy:
    enabled: true
  networkPolicy:
    enabled: true
  serviceAccount:
    create: true
    name: streamworks-service-account
  rbac:
    create: true

# Storage configuration
storage:
  persistence:
    enabled: true
    storageClass: "fast-ssd"
    size: 100Gi
    accessMode: ReadWriteOnce
  backup:
    enabled: true
    schedule: "0 2 * * *"
    retention: "30d"

# Logging configuration
logging:
  enabled: true
  level: INFO
  format: json
  elasticsearch:
    enabled: true
    host: "elasticsearch.monitoring.svc.cluster.local"
    port: 9200