[tool.ruff]
# Python version compatibility
target-version = "py39"

# Line length for code formatting
line-length = 88

# Files to exclude from linting
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    ".env",
    "migrations/versions/*.py",
    "build",
    "dist"
]

[tool.ruff.lint]
# Enable specific linting rules
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "RUF", # Ruff-specific rules
    "S",   # flake8-bandit (security)
    "T20", # flake8-print
    "PL",  # Pylint
    "C90", # mccabe complexity
]

# Rules to ignore
ignore = [
    "E501",   # line too long (handled by line-length)
    "B008",   # function calls in arguments defaults
    "T201",   # print statements (allowed for debugging)
    "S101",   # assert statements (allowed in tests)
    "PLR0913", # too many arguments
    "PLR0915", # too many statements
]

# Per-file ignores
[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["S101", "PLR2004"]  # Allow assert and magic values in tests
"**/migrations/**" = ["ALL"]        # Skip migrations
"config.py" = ["S105", "S106"]      # Allow hardcoded secrets in config

[tool.ruff.lint.mccabe]
# Maximum complexity for functions
max-complexity = 10

[tool.ruff.lint.isort]
# Import sorting configuration
known-first-party = ["services", "routes", "database"]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"
# Use spaces for indentation
indent-style = "space"
# Respect existing line endings
line-ending = "auto"