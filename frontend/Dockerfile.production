# Multi-stage Docker build for Enterprise StreamWorks Frontend
# Stage 1: Base Node.js image
FROM node:20-alpine as base

# Set working directory
WORKDIR /app

# Install dependencies needed for node-gyp
RUN apk add --no-cache python3 make g++

# Stage 2: Dependencies installation
FROM base as dependencies

# Copy package files
COPY package*.json ./

# Install all dependencies (including devDependencies for build)
RUN npm ci --include=dev

# Stage 3: Development
FROM dependencies as development

# Copy source code
COPY . .

# Expose port for development
EXPOSE 3000

# Development command
CMD ["npm", "run", "dev"]

# Stage 4: Build stage
FROM dependencies as builder

# Copy source code
COPY . .

# Set production environment
ENV NODE_ENV=production \
    REACT_APP_ENVIRONMENT=production \
    GENERATE_SOURCEMAP=false

# Build the application
RUN npm run build

# Verify build output
RUN ls -la dist/ && echo "Build completed successfully"

# Stage 5: Production runtime with Nginx
FROM nginx:alpine as production

# Install curl for health checks
RUN apk add --no-cache curl

# Remove default nginx static assets
RUN rm -rf /usr/share/nginx/html/*

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx.production.conf /etc/nginx/conf.d/default.conf

# Create nginx user and set permissions
RUN addgroup -g 1001 -S nginx-app && \
    adduser -S -D -H -u 1001 -h /var/cache/nginx -s /sbin/nologin -G nginx-app -g nginx-app nginx-app && \
    chown -R nginx-app:nginx-app /usr/share/nginx/html /var/cache/nginx /var/log/nginx /etc/nginx/conf.d

# Create health check endpoint
RUN echo '<!DOCTYPE html><html><head><title>Health Check</title></head><body><h1>StreamWorks Frontend - Healthy</h1><script>console.log("Health check OK");</script></body></html>' > /usr/share/nginx/html/health

# Switch to non-root user
USER nginx-app

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
    CMD curl -f http://localhost:80/health || exit 1

# Expose port
EXPOSE 80

# Production command
CMD ["nginx", "-g", "daemon off;"]